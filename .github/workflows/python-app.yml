# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install numpy
        pip install pygame
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check audio.py existence
      id: check_audio
      uses: andstor/file-existence-action@v1
      with:
        files: "audio.py"

    - name: Check vbuffer.py existence
      id: check_vbuffer
      uses: andstor/file-existence-action@v1
      with:
        files: "vbuffer.py"

    - name: Check window.py existence
      id: check_window
      uses: andstor/file-existence-action@v1
      with:
        files: "window.py"

    - name: Test audio
      if: steps.check_audio.outputs.files_exists == 'true'
#      run: pytest test_audio.py

    - name: Test vbuffer
      if: steps.check_vbuffer.outputs.files_exists == 'true'
      run: pytest test_vbuffer.py

    - name: Test window
      if: steps.check_window.outputs.files_exists == 'true'
      run: pytest test_window.py
